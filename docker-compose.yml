version: '3.8'

networks:
  internal:
  proxy:
    external: true

services:

  traefik:
    image: "traefik:v2.7"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=proxy"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      #      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy

  db:
    image: postgres:15.3
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: QT6e5APtSYaU
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./db:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432
    networks:
      - internal

  pgadmin:
    image: "dpage/pgadmin4:latest"
    restart: always
    container_name: pgadmin
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: QT6e5APtSYaU
      PGADMIN_DEFAULT_EMAIL: anguidev@gmail.com
      PGADMIN_DEFAULT_PASSWORD: QT6e5APtSYaU
    depends_on:
      - db
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`db.demo.develop`)"
    ports:
      - 15432:80
    networks:
      - internal
      - proxy

  app:
    container_name: app
    restart: always
    build:
      context: ./docker
    depends_on:
      - db
    labels:
      - "traefik.enable=false"
    environment:
      - APP_ENV=dev
      - APP_SECRET=cb6aee34801ece16b9d9453e62886cee
      - XDEBUG_MODES=debug
      - DATABASE_URL=postgresql://root:QT6e5APtSYaU@db:5432/app_db?serverVersion=14
      - REMOTE_HOST=host.docker.internal
      - "host.docker.internal:host-gateway"
    volumes:
      - ./app:/var/www/html
    networks:
      - internal

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./docker/nginx
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.http.routers.www.rule=Host(`demo.develop`)"
      - "traefik.http.services.www.loadbalancer.server.port=80"
    depends_on:
      - app
    networks:
      - internal
      - proxy

